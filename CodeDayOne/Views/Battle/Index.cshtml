@model CodeDayOne.ViewModels.BattleViewModel
<script src="~/lib/jquery/dist/jquery.js" type="text/javascript"></script>
<script src="~/js/app.js" type="text/javascript"></script>
@{
    ViewData["Title"] = "BattleScreen";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2 class="text-center">BattleScreen</h2>

<hr />

<div class="row">
    <div class="col-md-4 text-right">
        <div class="col-md-6">
            <img src="https://i.imgur.com/1IVcAQm.png" />
        </div>
        <div class="col-md-6 text-left">
            <h1 id="partyGold">0</h1>
        </div>
    </div>
    <div class="col-md-4 text-right">
        <div class="col-md-6">
            <img src="https://i.imgur.com/SV88cuS.png" />
        </div>
        <div class="col-md-6 text-left">
            <h1 id="partyXP">0</h1>
        </div>
    </div>
    <div class="col-md-4">
        <div class="text-center">
            <button class="btn btn-danger" id="createHordeButton" onclick="location.href='@Url.Action("Index", "Battle", new { partyMember1ID = Model.PartyMember1.ID, partyMember2Id = Model.PartyMember2.ID })'" type="button">
                Create Random Minion Horde
            </button>
        </div>
    </div>
</div>

<hr />

<div>
    <div class="row text-left">
        <div class="col-md-4"> <!-- Party Member 1 Start -->
            <div id="partyMember1">
                @{ Html.RenderPartial("_ChampionDetails", Model.PartyMember1);}
            </div>
        </div> <!-- Party Member 1 End -->
        <div class="col-md-4"> <!-- Party Member 2 Start -->
            <div id="partyMember2">
                @{ Html.RenderPartial("_ChampionDetails", Model.PartyMember2);}
            </div>
        </div> <!-- Party Member 2 End -->
        <div id="minionPartial">
            @{Html.RenderPartial("_MinionList", Model);}
        </div>
    </div>
</div>

<p id="battleDialogue">Battle Dialogue:</p>

<script>
    $(".champAttack").click(function () {
        var div = document.getElementById("battleDialogue");

        var manaCost = parseInt($(this).attr('manaCost'));
        var currentMana;
    
        var champName = $(this).attr('champName');
        var abilityName = $(this).attr('value');
        var abilityType = $(this).attr('abilityType');

        var targetedMinion = $('.targeted').attr('name');
        var minionIndex = parseInt($('.targeted').attr('value'));
        var minionArmor = parseInt($('.targeted').attr('armor'));
        var minionMagicResist = parseInt($('.targeted').attr('magicResist'));
        var minionGoldGiven = parseInt($('.targeted').attr('gold'));
        var minionXpGiven = parseInt($('.targeted').attr('xp'));

        var partyMemberIndex;
        if (champName == '@Model.PartyMember1.Name') {
            partyMemberIndex = 1;
            currentMana = parseInt($('#partyMember1').find('.currentMana').html());
        }
        else if (champName == '@Model.PartyMember2.Name') {
            partyMemberIndex = 2;
            currentMana = parseInt($('#partyMember2').find('.currentMana').html());
        }
        
        if (targetedMinion != null) {
            if (manaCost > currentMana) {
                div.innerHTML = "Not enough mana for this ability! <br>" + div.innerHTML;
            }
            else {
                var didDefenderDie = false;
                ReduceManaAmount(partyMemberIndex, currentMana, manaCost);
                didDefenderDie = ResolveDamage(CalculateDamage(partyMemberIndex), abilityType, minionArmor, minionMagicResist);
                div.innerHTML = AttackSummary(champName, abilityName, targetedMinion, didDefenderDie) + div.innerHTML;
                if (didDefenderDie) {
                    AddXpAndGoldToParty(minionGoldGiven, minionXpGiven);
                    div.innerHTML = "The party has gained " + minionGoldGiven + " gold and " + minionXpGiven + " XP! <br>" + div.innerHTML;
                    // Check to see if any minions are still alive
                    div.innerHTML = AnyMinionsLeft() + div.innerHTML;
                }

            }
        }
        else {
            div.innerHTML = "Must target a minion first. <br>" + div.innerHTML;
        }
    });

    function ReduceManaAmount(partyMemberIndex, currentMana, manaCost) {
        currentMana -= manaCost;
        //update mana on view
        if (partyMemberIndex == 1) {
            $('#partyMember1').find('.currentMana').html(currentMana);
        }
        else if(partyMemberIndex == 2) $('#partyMember2').find('.currentMana').html(currentMana);
    }

    function CalculateDamage(partyMemberIndex) {
        var damage;
        if (partyMemberIndex == 1) damage = @Model.PartyMember1.Attack;
        else damage = @Model.PartyMember2.Attack;
        return damage;
    }

    function ResolveDamage(damage, abilityType, armor, magicResist) {
        var didDefenderDie = false;
        //reduce physical damage based on armor
        if (abilityType == "physical") {
            damage = Math.floor((damage * (100 - armor))/100);
        }
        //reduce magic damage based on magic resist
        else damage = Math.floor((damage * (100 - magicResist))/100);

        //update minion's health on view
        var minionHealth = $('.targeted span').html();
        minionHealth -= damage;
        //health cannot be negative; reset to 0
        if (minionHealth <= 0) minionHealth = 0;
        $('.targeted span').html(minionHealth);
        didDefenderDie = CheckIfDefenderDied(minionHealth);
        return didDefenderDie;
    }

    function CheckIfDefenderDied(minionHealth) {
        var didDefenderDie = false;
        //if minion dies remove .targeted class
        if (minionHealth == 0) {
            didDefenderDie = true;
            $('.targeted').css("background-color", "#ff6666");
            $('.targeted').addClass('dead');
            $('.targeted').removeClass('battleMinion');
            $('.targeted').removeClass("targeted");
        }
        return didDefenderDie;
    }

    function AttackSummary(champName, abilityName, minionName, didDefenderDie) {
        if (didDefenderDie) return "<font color='red'>" + champName + " has killed a " + minionName + " with " + abilityName + "!</font> <br>";
        else return champName + " has attacked a " + minionName + " with " + abilityName + "! <br>";
    }

    function AddXpAndGoldToParty(goldGiven, xpGiven) {
        var currentGold = parseInt($('#partyGold').html());
        var currentXp = parseInt($('#partyXP').html());
        currentGold += goldGiven;
        currentXp += xpGiven;
        $('#partyGold').html(currentGold);
        $('#partyXP').html(currentXp);
    }

    function AnyMinionsLeft() {
        var battleMinions = document.getElementsByClassName('battleMinion');
        if (battleMinions.length == 0) return "The horde has been defeated! <br>";
        else return "";
    }

</script>